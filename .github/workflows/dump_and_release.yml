name: Dump IL2CPP and Release

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0'  # 毎週日曜日の00:00に実行

jobs:
  dump-and-release:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests lzma

      - name: Download and extract XAPK and Il2CppDumper
        run: python ./scripts/download_and_extract.py

      - name: Generate dump.cs
        run: python ./scripts/generate_dump.py

      - name: Inject Frida Gadget into APK
        run: python ./scripts/inject_frida.py

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: LoveLive IL2CPP Dump ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload dump.cs
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./output/dump.cs
          asset_name: dump.cs
          asset_content_type: text/plain

      - name: Upload injected APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./output/injected-signed.apk
          asset_name: lovelive-injected.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload config APKs
        run: |
          $configApks = Get-ChildItem -Path ./output/signed-config*.apk
          foreach ($apk in $configApks) {
            $apkName = $apk.Name
            curl -X POST `
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" `
              -H "Content-Type: application/vnd.android.package-archive" `
              --data-binary "@$($apk.FullName)" `
              "${{ steps.create_release.outputs.upload_url }}?name=$apkName&label=$apkName"
          }
        shell: pwsh